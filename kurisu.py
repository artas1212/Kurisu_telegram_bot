# -*- coding: utf-8 -*-
"""Kurisu.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12OEth-yzh6GS3xFKfkaSWVdB3BGb9W_X
"""

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# pip install pytelegrambotapi

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# pip install emoji

pip install python-docx

#Примеры использования эмодзи
import emoji
#Список доступных эмодзи ниже:
#https://unicode.org/emoji/charts/full-emoji-list.html
smiling_face_emoji = emoji.emojize(':slightly_smiling_face:')
cat_emoji = emoji.emojize(':cat:')
ok_emoji = emoji.emojize(':OK_hand:')
bot_emoji = emoji.emojize(':robot:')
pencil_emoji = emoji.emojize(':pencil:')
pen_emoji = emoji.emojize(':pen:')
check_mark_emoji = emoji.emojize(':check_mark:')
frowing_face_emoji=emoji.emojize(':slightly_frowning_face:')
parrot_emoji = emoji.emojize(':parrot:')
puzzle_piece_emoji = emoji.emojize(':puzzle_piece:')
print(smiling_face_emoji,cat_emoji,ok_emoji,bot_emoji,pencil_emoji,pen_emoji,
      check_mark_emoji,frowing_face_emoji,parrot_emoji,puzzle_piece_emoji)

from google.colab import drive
drive.mount('/content/gdrive')

#Пути к файлам с изображениями
cat_folder_path = '/content/gdrive/My Drive/Telebot-files/Kurisu_bot/Images/mems/cat'
kitties_folder_path = '/content/gdrive/My Drive/Telebot-files/Kurisu_bot/Images/mems/kitties'
work_folder_path = '/content/gdrive/My Drive/Telebot-files/Kurisu_bot/Images/mems/work'

# Пути к текстовым файлам
jokes_folder_path = '/content/gdrive/My Drive/Telebot-files/Kurisu_bot/Texts/Jokes'

#Библиотека Pillow для изображений
from PIL import Image
from PIL import ImageFilter
image = Image.new(mode="RGB", size=(150, 150),
                  color = (202, 31, 123))
image

import telebot
#from io import BytesIO
#import numpy as np
from telebot import types
import os
import random
import chardet
from docx import Document

TELEGRAM_API_TOKEN = '8338458941:AAFUA3PmPKc_cHRnJ2DXo5o_5AbkrKbi3lU'
bot = telebot.TeleBot(TELEGRAM_API_TOKEN)

#Функция получения изображения из папки folder_path
def get_random_image(folder_path):
  image_list = os.listdir(folder_path)
  file_name = random.choice(image_list)
  # print(file_name)
  image_path=folder_path+'/'+file_name
  # print(image_path)
  image = Image.open(image_path)
  return image

#Функция получения текстового файла из папки folder_path
def get_random_text(folder_path):
  text_list = os.listdir(folder_path)
  file_name = random.choice(text_list)
  text_path= os.path.join(folder_path, file_name)
  #Открываем Docx и собираем весь текст
  doc = Document(text_path)
  full_text = []
  for para in doc.paragraphs:
    full_text.append(para.text)

  #Объединяем параграфы через перенос строки
  text = "n".join(full_text)

  # Ограничиваем длину текста, чтобы Telegram принял сообщение
  if len(text) > 4000:
    text = text[:4000] + "..."
  return text

work_image = get_random_image(work_folder_path)
work_image

# обработка команды /start
@bot.message_handler(commands=['start'])
def start_bot(message):
    bot.send_message(message.chat.id, text=f'Привет {message.from_user.first_name}! Напиши ключевое слово (например: кот, котики, работа, шутка)')

# обработка команд /begin /hello /hi /help
@bot.message_handler(commands=['begin', 'hello', 'hi'])
def greetings(message):
    bot.send_message(message.chat.id, f'Добрый день {smiling_face_emoji}!')

# обработка команды /actions
@bot.message_handler(commands=['actions'])
def actions(message):
    bot.send_message(message.chat.id,
                     f'Сейчас наш бот {bot_emoji} умеет только отвечать на команды '
                     f'/start /begin /hello /hi /actions и /help')

# обработка команды /help
@bot.message_handler(commands=['help'])
def help(message):
  bot.send_message(message.chat.id,
                   f'Привет, {message.from_user.first_name}! Этот бот показывает изображения по введеным ключевым словам. Есть мемы по тематикам: работа, коты и котики')

# обработка всех остальных сообщений
@bot.message_handler(content_types=['text'])
def message_processing(message):
    if message.text.lower() in ['привет', 'добрый день']:
        bot.send_message(message.chat.id,
                         f'{smiling_face_emoji} Приветствую {message.from_user.first_name} {message.from_user.last_name}')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'ID {message.from_user.id}')
    elif message.text.lower() == 'кот':
        image = get_random_image(cat_folder_path)
        bot.send_photo(message.chat.id, image, caption='мемасики про котов')
    elif message.text.lower() == 'котики':
        image = get_random_image(kitties_folder_path)
        bot.send_photo(message.chat.id, image, caption='мем про котиков')
    elif message.text.lower() == 'работа':
        image = get_random_image(work_folder_path)
        bot.send_photo(message.chat.id, image, caption='мемы про работу')
    elif message.text.lower() == 'шутка' or message.text.lower() == 'прикол':
        joke = get_random_text(jokes_folder_path)
        bot.send_message(message.chat.id, joke)

    else:
        bot.send_message(message.chat.id,
                         f'Запустите бот {bot_emoji} командой /start')

#Опрос серверов Telegram на наличие новых сообщений
#interval - Интервал между запросами на опрос
bot.polling(non_stop=True, interval=0)